package com.example.myapplication.helper;

import android.content.Context;
import android.content.SharedPreferences;

public class SharedPrefManager {
    //Shared Preference
    private SharedPreferences pref;

    //Editor for Shared Preferences
    private SharedPreferences.Editor editor;

    //Context
    private Context mContext;

    //SharedPreference mode
    private int PRIVATE_MODE = 0;

    // Shared preference file name
    private static final String PREF_NAME = "Simbiosis";
    private static final String KEY_CLIENT_SERVER_URL = "client_server_url";
    private static final String KEY_CLOUD_CODE = "cloud_code";
    private static final String KEY_AUTH_TOKEN = "auth_token";
    private static final String KEY_IS_USER_LOGGED_IN = "isUserLoggedIn";
    private static final String KEY_PROJECT_NAME = "projectName";
    private static final String KEY_MOBILE_NO = "mobileNumber";
    private static final String KEY_QUICK_LINKS = "quickLinks";
    private static final String KEY_USER_NAME = "user_name";
    private static final String KEY_DASHBOARD_MENU = "dashboard_menu";
    private static final String KEY_FCM_TOKEN = "fcm_token";

    public SharedPrefManager(Context context) {
        this.mContext = context;
        pref = mContext.getSharedPreferences(PREF_NAME, PRIVATE_MODE);
        editor = pref.edit();
    }

    public void setServerDetails(String clientServerUrl, String cloudCode){
        editor.putString(KEY_CLIENT_SERVER_URL, clientServerUrl);
        editor.putString(KEY_CLOUD_CODE, cloudCode);
        editor.commit();
    }

    public void saveUserDetails(boolean isLoggedIn,
                                               String token,
                                               String mobileNo,
                                               String userName){
        editor.putBoolean(KEY_IS_USER_LOGGED_IN, isLoggedIn);
        editor.putString(KEY_AUTH_TOKEN, token);
        editor.putString(KEY_MOBILE_NO,mobileNo);
        editor.putString(KEY_USER_NAME,userName);
        editor.commit();
    }

    public void setUserName(String userName){
        editor.putString(KEY_USER_NAME, userName);
        editor.commit();
    }

    public void setAuthToken(String token){
        editor.putString(KEY_AUTH_TOKEN, token);
        editor.commit();
    }

    public String getUserName(){
        return pref.getString(KEY_USER_NAME,"");
    }
    public String getClientServerUrl(){
        return pref.getString(KEY_CLIENT_SERVER_URL, "");
    }

    public String getCloudCode(){
        return pref.getString(KEY_CLOUD_CODE, "");
    }

    public String getAuthToken(){
        return pref.getString(KEY_AUTH_TOKEN, "");
    }

    public String getMobileNo(){
        return pref.getString(KEY_MOBILE_NO, "");
    }

    public void setQuickLinks(String quickLinks){
        editor.putString(KEY_QUICK_LINKS, quickLinks);
        editor.commit();
    }

    public String getQuickLinks(){
        return pref.getString(KEY_QUICK_LINKS,"");
    }

    public boolean getIsUserLoggedIn(){
        return pref.getBoolean(KEY_IS_USER_LOGGED_IN,false);
    }


    public void setDashboardMenu(String dashboardMenu){
        editor.putString(KEY_DASHBOARD_MENU, dashboardMenu);
        editor.commit();
    }

    public String getDashboardMenu() {
        return pref.getString(KEY_DASHBOARD_MENU, "");
    }

    public void setFcmToken(String token){
        editor.putString(KEY_FCM_TOKEN, token);
        editor.commit();
    }

    public void putString(String key, String value){
        editor.putString(key, value);
        editor.commit();
    }

    public String getString(String key){
        return pref.getString(key, "");
    }

    public String getFcmToken(){
        return pref.getString(KEY_FCM_TOKEN, "");
    }

//    public HashMap<String, String> getServerDetails() {
//            HashMap<String, String> profile = new HashMap<>();
//            profile.put("name", pref.getString(KEY_NAME, null));
//            profile.put("email", pref.getString(KEY_EMAIL, null));
//            profile.put("mobile", pref.getString(KEY_MOBILE, null));
//            return profile;
//    }

    public void clearSession() {
        editor.clear();
        editor.commit();
    }








}

